{% set os = ansible_facts['distribution'] %}
{% set os_ver = ansible_facts['distribution_version'] %}
{% set hname = inventory_hostname %}
{% set remote_ip = ansible_facts['all_ipv4_addresses'][not dnsdist_testing[hname]] %}
#
# DO not edit!!! This file was generated by ansible/jina on doghaus
#

#
# See the unbound.conf(5) man page.
#

# The server clause sets the main parameters.
# whitespace is not necessary, but looks cleaner.

server:

  # The verbosity number, level 0 means no verbosity, only errors.
  # Level 1 gives operational information. Level 2 gives detailed
  # perational information. Level 3 gives query level information,
  # output per query. Level 4 gives algorithm level information. Level
  # 5 logs client identification for cache misses. Default is level 1.
  # The verbosity can also be increased from the commandline,

	verbosity: 1

	# print statistics to the log (for every thread) every N seconds.
	# Set to "" or 0 to disable. Default is disabled.
	statistics-interval: 600

	# enable shm for stats, default no.  if you enable also enable
	# statistics-interval, every time it also writes stats to the
	# shared memory segment keyed with shm-key.
	# shm-enable: no

	# shm for stats uses this key, and key+1 for the shared mem segment.
	# shm-key: 11777

	# enable cumulative statistics, without clearing them after printing.
	statistics-cumulative: yes

	# enable extended statistics (query types, answer codes, status)
	# printed from unbound-control. default off, because of speed.
	# extended-statistics: no

	# number of threads to create. 1 disables threading.
	num-threads: 8

	# specify the interfaces to answer queries from by ip-address.
	# The default is to listen to localhost (127.0.0.1 and ::1).
	# specify 0.0.0.0 and ::0 to bind to all available interfaces.
	# specify every interface[@port] on a new 'interface:' labelled line.
	# The listen interfaces are not changed on reload, only on restart.
	# interface: 192.0.2.154@5003
	# interface: 2001:DB8::5
	interface: 127.0.0.1
	interface: {{ remote_ip }}

	# enable this feature to copy the source address of queries to reply.
	# Socket options are not supported on all platforms. experimental.
	# interface-automatic: no

	# port to answer queries from
	port: 53

	# specify the interfaces to send outgoing queries to authoritative
	# server from by ip-address. If none, the default (all) interface
	# is used. Specify every interface on a 'outgoing-interface:' line.
	# outgoing-interface: 192.0.2.153
	# outgoing-interface: 2001:DB8::5
	# outgoing-interface: 2001:DB8::6
	outgoing-interface: {{ remote_ip }}

	do-ip4: yes
	do-ip6: no
	do-udp: yes
	do-tcp: yes
	do-daemonize: yes

{% if os == "OpenBSD" %}
{% set chrootdir = '/var/unbound' %}

	chroot: "{{ chrootdir }}"
	logfile: "/var/log/unbound"
	use-syslog: no
	log-time-ascii: no
	log-queries: yes
	log-replies: no

include: "/var/unbound/etc/access.cidr"

{% elif os == "Ubuntu" %}
{% set chroot = '' %}

	chroot: "{{ chroot }}"
	username: "unbound"
	directory: "/etc/unbound"
	use-syslog: yes

include: /etc/unbound/access.cidr


# Python config section. To enable:
# o use --with-pythonmodule to configure before compiling.
# o list python in the module-config string (above) to enable.
# o and give a python-script to run.
python:
	# Script file to load
	# python-script: "/etc/unbound/ubmodule-tst.py"

{% endif %}

	hide-identity: yes
	hide-version: yes

	root-hints: "/etc/named.cache"

  # Uncomment to enable DNSSEC validation.
  #
  #auto-trust-anchor-file: "/var/unbound/db/root.key"
  #val-log-level: 2

  # Uncomment to synthesize NXDOMAINs from DNSSEC NSEC chains
  # https://tools.ietf.org/html/rfc8198
  #
  #aggressive-nsec: yes

  # Serve zones authoritatively from Unbound to resolver clients.
  # Not for external service.
  #
  #local-zone: "local." static
  #local-data: "mycomputer.local. IN A 192.0.2.51"
  #local-zone: "2.0.192.in-addr.arpa." static
  #local-data-ptr: "192.0.2.51 mycomputer.local"

# include: /var/unbound/etc/local-bad-hosts

  # UDP EDNS reassembly buffer advertised to peers. Default 4096.
  # May need lowering on broken networks with fragmentation/MTU issues,
  # particularly if validating DNSSEC.
  #
  #edns-buffer-size: 1480

  # Use TCP for "forward-zone" requests. Useful if you are making
  # DNS requests over an SSH port forwarding.
  #
  #tcp-upstream: yes

  # CA Certificates used for forward-tls-upstream (RFC7858) hostname
  # verification.  Since it's outside the chroot it is only loaded at
  # startup and thus cannot be changed via a reload.
  #tls-cert-bundle: "/etc/ssl/cert.pem"


# Use an upstream forwarder (recursive resolver) for specific zones.
# Example addresses given below are public resolvers valid as of 2014/03.
#
#forward-zone:
#       name: "."                               # use for ALL queries
#       forward-addr: 128.100.103.33            # he.net
#       forward-addr: 2001:470:20::2            # he.net v6
#       forward-addr: 8.8.8.8                   # google.com
#       forward-addr: 2001:4860:4860::8888      # google.com v6
#       forward-addr: 208.67.222.222            # opendns.com
#       forward-first: yes                      # try direct if forwarder fails

# stub zones are real zones which have an authoritative name server attached
# Create entries like below, to make all queries for 'example.com' and
# 'example.org' go to the given list of nameservers. list zero or more
# nameservers by hostname or by ipaddress. If you set stub-prime to yes,
# the list is treated as priming hints (default is no).
# With stub-first yes, it attempts without the stub if it fails.
# Consider adding domain-insecure: name and local-zone: name nodefault
# to the server: section if the stub is a locally served zone.
# stub-zone:
#	name: "example.com"
#	stub-addr: 192.0.2.68
#	stub-prime: no
#	stub-first: no
#	stub-ssl-upstream: no
# stub-zone:
#	name: "example.org"
#	stub-host: ns.example.com.
#

# local data to aid in on premise Azure servers
include: /var/unbound/etc/local-zone-data.conf

#include: /var/unbound/etc/local-zone-data/*.com
#include: /var/unbound/etc/local-zone-data/*.net
#include: /var/unbound/etc/local-zone-data/*.io
 
# direct routes to UofT authoritative servers
include: /var/unbound/etc/local-zone-routes.conf

remote-control:
	control-enable: yes
	control-use-cert: no
	control-interface: /var/run/unbound.sock

	# unbound server key file.
	# server-key-file: "/etc/unbound/unbound_server.key"
	# unbound server certificate file.
	# server-cert-file: "/etc/unbound/unbound_server.pem"
	# unbound-control key file.
	# control-key-file: "/etc/unbound/unbound_control.key"
	# unbound-control certificate file.
	# control-cert-file: "/etc/unbound/unbound_control.pem"

# Forward zones
# Create entries like below, to make all queries for 'example.com' and
# 'example.org' go to the given list of servers. These servers have to handle
# recursion to other nameservers. List zero or more nameservers by hostname
# or by ipaddress. Use an entry with name "." to forward all queries.
# If you enable forward-first, it attempts without the forward if it fails.
# forward-zone:
# 	name: "example.com"
# 	forward-addr: 192.0.2.68
# 	forward-addr: 192.0.2.73@5355  # forward to port 5355.
# 	forward-first: no
# 	forward-ssl-upstream: no
# forward-zone:
# 	name: "example.org"
# 	forward-host: fwd.example.com

forward-zone:
	name: "."
	forward-addr: 162.219.51.2
	forward-addr: 162.219.50.2
	forward-first: yes
