# $OpenBSD: unbound.conf,v 1.21 2020/10/28 11:35:58 sthen Exp $
# $File$

server:

# The verbosity number, level 0 means no verbosity, only errors.
# Level 1 gives operational information. Level 2 gives detailed
# perational information. Level 3 gives query level information,
# output per query. Level 4 gives algorithm level information. Level
# 5 logs client identification for cache misses. Default is level 1.
# The verbosity can also be increased from the commandline,

	verbosity: 1

	statistics-interval: 600
	statistics-cumulative: yes

	num-threads: 8

	interface: 127.0.0.1@53
	interface: 128.100.56.131@53
#	interface: 128.100.56.135@53
	#interface: 127.0.0.1@5353
	#interface: 128.100.56.135@5353
	#interface: 127.0.0.1@5353	# listen on alternative port
	#interface: ::1
	#do-ip6: no

	outgoing-interface: 128.100.56.131
	# addresses are available, they are used randomly to counter spoofing
	#outgoing-interface: 192.0.2.1
	#outgoing-interface: 2001:db8::53

	do-ip4: yes
	do-ip6: no
	do-udp: yes
	do-tcp: yes
	do-daemonize: yes

	chroot: "/var/unbound"
	logfile: "/var/log/unbound"
	use-syslog: no
	log-time-ascii: no
	log-queries: yes
	log-replies: no

include: /var/unbound/etc/access.cidr

	hide-identity: yes
	hide-version: yes

	root-hints: "/etc/named.cache"

	# Uncomment to enable DNSSEC validation.
	#
	#auto-trust-anchor-file: "/var/unbound/db/root.key"
	#val-log-level: 2

	# Uncomment to synthesize NXDOMAINs from DNSSEC NSEC chains
	# https://tools.ietf.org/html/rfc8198
	#
	#aggressive-nsec: yes

	# Serve zones authoritatively from Unbound to resolver clients.
	# Not for external service.
	#
	#local-zone: "local." static
	#local-data: "mycomputer.local. IN A 192.0.2.51"
	#local-zone: "2.0.192.in-addr.arpa." static
	#local-data-ptr: "192.0.2.51 mycomputer.local"

#	include: /var/unbound/etc/local-bad-hosts

	# UDP EDNS reassembly buffer advertised to peers. Default 4096.
	# May need lowering on broken networks with fragmentation/MTU issues,
	# particularly if validating DNSSEC.
	#
	#edns-buffer-size: 1480

	# Use TCP for "forward-zone" requests. Useful if you are making
	# DNS requests over an SSH port forwarding.
	#
	#tcp-upstream: yes

	# CA Certificates used for forward-tls-upstream (RFC7858) hostname
	# verification.  Since it's outside the chroot it is only loaded at
	# startup and thus cannot be changed via a reload.
	#tls-cert-bundle: "/etc/ssl/cert.pem"

# Use an upstream forwarder (recursive resolver) for specific zones.
# Example addresses given below are public resolvers valid as of 2014/03.
#
#forward-zone:
#	name: "."				# use for ALL queries
#	forward-addr: 128.100.103.33		# he.net
#	forward-addr: 2001:470:20::2		# he.net v6
#	forward-addr: 8.8.8.8			# google.com
#	forward-addr: 2001:4860:4860::8888	# google.com v6
#	forward-addr: 208.67.222.222		# opendns.com
#	forward-first: yes			# try direct if forwarder fails

# stub zones are real zones which have an authoritative name server attached

# local data to aid in on premise Azure servers
include: /var/unbound/etc/local-zone-data.conf

# Direct routes to UofT DNS data
include: /var/unbound/etc/local-zone-routes.conf

remote-control:
	control-enable: yes
	control-use-cert: no
	control-interface: /var/run/unbound.sock

#forward-zone:
#	name: "core.windows.net"
#	forward-addr: 10.140.127.132
#forward-zone:
#	name: "database.windows.net"
#	forward-addr: 10.140.127.132
#forward-zone:
#	name: "database.azure.net"
#	forward-addr: 10.140.127.132

forward-zone:
	name: "."
	forward-addr: 162.219.51.2
	forward-addr: 162.219.50.2
	forward-first: yes
